#!/bin/bash
#
# cgi-bin/new-user: user creation page
#
#
# Copyright (C) 2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Recommended config using fcgiwrap:
#
# location = /new-user {
#   fastcgi_pass unix:/run/fcgiwrap.sock;
#   fastcgi_param SCRIPT_FILENAME /usr/local/bin/udge-new-user;
#   include fastcgi.conf;
# }
#
# Use the above inside an existing server{} entry.

set -e

prefix="$(dirname "$(dirname "$0")")"
. "$prefix/lib/udge/core"
. "$lib/html"
. "$lib/cgi"

get() {
	http-header
	html-header "New user â€“ $NAME"
	html-navbar
	echo "<h2>New user</h2>"
	echo '<form action="/new-user" method="POST" enctype="multipart/form-data">'
	html-form-input text     user                  'Username'              'username'              "$user_error"     "$user_value"
	html-form-input text     name                  'Name (optional)'       'name'                  "$name_error"     "$name_value"
	html-form-input email    email                 'Email'                 'email'                 "$email_error"    "$email_value"
	html-form-input email    email-confirmation    'Email confimration'    'email confirmation'    "$email_error"    "$email_confirmation_value"
	html-form-input password password              'Password'              'password'              "$password_error" "$password_value"
	html-form-input password password-confirmation 'Password confirmation' 'password confirmation' "$password_error" "$password_confirmation_value"
	echo '<input type="submit" name="submit" value="Create new user">'
	echo '</form>'
	html-navbar
	html-footer
}


success() {
	http-header
	html-header "User created"
	html-navbar
	cat <<HTML
<h2>User created</h2>

<p>
Successfully created
user <strong>$user_value</strong>
with email <strong>$email_value</strong>
and name <strong>$name_value</strong>.
</p>

<p>
Your <a href="/u/$user_value">user page</a> will be available in a few minutes.
</p>

<p>
You are ready to <a href="/submit">submit a solution</a> now
for any problem in the <a href="/">problem index</a>.
</p>
HTML
	html-navbar
	html-footer
}


has-error() {
	[ -n "$user_error"     ] ||
	[ -n "$password_error" ] ||
	[ -n "$email_error"    ] ||
	false
}


password-errors() {
	[ -s "$password_fn" ] || echo "password is missing"
	cracklib-check < "$password_fn" |
	sed -e "s/.*: //" |
	sed -e "s/^OK$//" |
	sed -e "s/dictionary word$/& (hint: use two dictionary words)/" |
	grep -v "^$"
	diff -q $password_fn $password_confirmation_fn >/dev/null 2>/dev/null || echo "passwords do not match"
}


post() {
	tmpdata=`mktemp -d "/tmp/udge-tmpdata.XXXXXXXXXX"`
	$bin/cgi-create-data-files $tmpdata

	user_fn="$tmpdata/user/value"
	name_fn="$tmpdata/name/value"
	password_fn="$tmpdata/password/value"
	password_confirmation_fn="$tmpdata/password-confirmation/value"
	email_fn="$tmpdata/email/value"
	email_confirmation_fn="$tmpdata/email-confirmation/value"
	user_value="`mcat "$user_fn"`"
	name_value="`mcat "$name_fn"`"
	email_value="`mcat "$email_fn"`"
	email_confirmation_value=`mcat "$email_confirmation_fn"`

	diff -q $email_fn    $email_confirmation_fn    >/dev/null 2>/dev/null || email_error="emails do not match"
	sane-file "$user_fn"        || user_error="invalid characters: use lowercase English letters, digits, dashes (-) or underscores (_)"
	[ -s "$user_fn" ]           || user_error="username is missing"
	password_error="`password-errors | head -1`"
	sane-email-file "$email_fn" || email_error="invalid or unsupported email address"
	[ -s "$email_fn" ]          || email_error="email is missing"
	if has-error
	then
		status=status-422-unprocessable-entity
		get
		rm -r $tmpdata
		exit
	fi

	user_dir="$USERS/$user_value"
	[ -e "$user_dir" ] && user_error="username already exists (pick another)"
	if has-error
	then
		status=status-409-conflict
		get
		rm -r $tmpdata
		exit
	fi

	echo | cat $password_fn - $password_confirmation_fn |
		$bin/udge-add-user $user_value $email_value "$name_value"
	[ -n "$name_value" ] || name_value=$user_value

	rm -r $tmpdata
	status=status-201-created
	success
}


if $NEW_USER
then
	case $REQUEST_METHOD in
	GET)  get  ;;
	POST) post ;;
	*)    page-405-method-not-allowed ;;
	esac
else
	page-403-forbidden
fi
