#!/bin/bash
#
# cgi-bin/new-user: user creation page
#
#
# Copyright (C) 2020-2022  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Recommended config using fcgiwrap:
#
# location = /new-user {
#   fastcgi_pass unix:/run/fcgiwrap.sock;
#   fastcgi_param SCRIPT_FILENAME /usr/local/bin/udge-new-user;
#   include fastcgi.conf;
# }
#
# Use the above inside an existing server{} entry.

set -e

prefix="$(dirname "$(dirname "$0")")"
. "$prefix/lib/udge/core"
. "$lib/html"
. "$lib/cgi"

get() {
	SHARING_TEXT="Progress sharing on the <a href=\"/$RANKPATH\">$RANKPATH</a> page"
	http-header
	html-header "New user â€“ $NAME"
	html-navbar
	echo "<h2>New user</h2>"
	echo '<form action="/new-user" method="POST" enctype="multipart/form-data">'
	html-form-input text     user                  'Username'              'username'              "$user_error"     "$user_value"
	html-form-input text     name                  'Name (optional)'       'name'                  "$name_error"     "$name_value"
	html-form-input email    email                 'Email'                 'email'                 "$email_error"    "$email_value"
	html-form-input email    email-confirmation    'Email confirmation'    'email confirmation'    "$email_error"    "$email_confirmation_value"
	html-form-input password password              'Password'              'password'              "$password_error" "$password_value"
	html-form-input password password-confirmation 'Password confirmation' 'password confirmation' "$password_error" "$password_confirmation_value"
	$SHARING_OPTIONS &&
	ls-sharing-options |
	html-form-select sharing "$SHARING_TEXT" 'select...'  "$sharing_error" "$sharing_value"
	echo '<input type="submit" name="submit" value="Create new user">'
	echo '</form>'
	html-navbar
	html-footer
}


success() {
	http-header
	html-header "User created"
	html-navbar
	cat <<HTML
<h2>User created</h2>

<p>
Successfully created
user <strong>$user_value</strong>
with email <strong>$email_value</strong>
and name <strong>$name_value</strong>.
</p>

<p>
Your <a href="/u/`user-or-anon $user_value`">user page</a> will be available in a few minutes.
</p>

<p>
You are ready to <a href="/submit">submit a solution</a> now
for any problem in the <a href="/">problem index</a>.
</p>
HTML
	html-navbar
	html-footer
}


has-error() {
	[ -n "$user_error"     ] ||
	[ -n "$password_error" ] ||
	[ -n "$email_error"    ] ||
	false
}


check-user() {
	[ -s "$user_fn" ] || {
		echo "username is missing"
		return
	}
	sane-file "$user_fn" || {
		echo "invalid characters: use lowercase English letters, digits, dashes (-) or underscores (_)"
		return
	}
	valid-user "$user_fn" || {
		echo "username already exists, pick another"
		return
	}
	[ "`wc -c <$user_fn`" -le 18 ] || {
		echo "username must have at most 18 characters"
		return
	}
	[ "`wc -c <$user_fn`" -ge  4 ] || {
		echo "username must have at least 4 characters"
		return
	}
}


check-password() {
	[ -s "$password_fn" ] || {
		echo "password is missing"
		return
	}
	diff -q $password_fn $password_confirmation_fn >/dev/null 2>/dev/null || {
		echo "passwords do not match"
		return
	}
	cracklib-check < "$password_fn" |
	sed -e "s/.*: //" |
	sed -e "s/^OK$//" |
	sed -e "s/dictionary word$/& (hint: use two dictionary words)/" |
	grep -v "^$" |
	head -1
}


check-email() {
	[ -s "$email_fn" ] || {
		echo "email is missing"
		return
	}
	sane-email-file "$email_fn" || {
		echo "invalid or unsupported email address"
		return
	}
	diff -q $email_fn $email_confirmation_fn >/dev/null 2>/dev/null || {
		echo "emails do not match"
		return
	}
}


check-sharing() {
	[ -s "$sharing_fn" ] || {
		echo "please select an option"
		return
	}
	sane-file "$problem_fn" || {
		echo "invalid sharing option"
		return
	}
	grep -qE "^(public|anonymous|unlisted)$" "$problem_fn" || {
		echo "unrecognized sharing option"
		return
	}
}


post() {
	tmpdata=`mktemp -d "/tmp/udge-tmpdata.XXXXXXXXXX"`
	$bin/cgi-create-data-files $tmpdata

	user_fn="$tmpdata/user/value"
	name_fn="$tmpdata/name/value"
	password_fn="$tmpdata/password/value"
	password_confirmation_fn="$tmpdata/password-confirmation/value"
	email_fn="$tmpdata/email/value"
	email_confirmation_fn="$tmpdata/email-confirmation/value"
	user_value="`html-cat "$user_fn"`"
	name_value="`html-cat "$name_fn"`"
	email_value="`html-cat "$email_fn"`"
	email_confirmation_value="`html-cat "$email_confirmation_fn"`"

	$SHARING_OPTIONS && {
		sharing_fn="$tmpdata/sharing/value"
		sharing_value="`html-cat "$sharing_fn"`"
		sharing_error="`check-sharing`"
	}

	user_error="`check-user`"
	password_error="`check-password`"
	email_error="`check-email`"
	has-error && {
		rm -r $tmpdata
		status=status-422-unprocessable-entity get
		return
	}

	[ -e "$USERS/$user_value" ] && user_error="username already exists (pick another)"
	has-error && {
		rm -r $tmpdata
		status=status-409-conflict get
		return
	}

	echo | cat $password_fn - $password_confirmation_fn |
		$bin/udge-add-user $user_value $email_value "$name_value"
	[ -n "$name_value" ] || name_value=$user_value

	# we do not want to lock because of this, hence || true
	$SHARING_OPTIONS &&
	case "$sharing_value" in
	anonymous) $bin/udge-configure-user $user_value anonymize || true ;;
	unlisted)  $bin/udge-configure-user $user_value unlist    || true ;;
	*)                                                           true ;;
	esac

	rm -r $tmpdata
	status=status-201-created
	success
}


if $NEW_USER
then
	case $REQUEST_METHOD in
	GET)  get  ;;
	POST) post ;;
	*)    page-405-method-not-allowed ;;
	esac
else
	page-403-forbidden
fi
