#!/bin/bash
#
# compile-and-test: compiles and tests a program
#
# This file is part of Udge.
#
#
# Copyright (C) 2015-2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# This is intended to be called only from bin/udge-judge
#
# There is only one required argument to the script,
# the program to be compiled and tested.
# Other arguments are only used to build the executable name.
#
#
# If the given program is a forkbomb, one instance of this script is able to
# disrupt other submissions.  To avoid that for now, do not call parallel
# instance of this or udge-judge.
prefix="$(dirname "$(dirname "$(dirname "$0")")")"
. "$prefix/lib/udge/core"
fail() {
	echo "$@"
	exit 1
}
src="$1"
suffix="$2"
[ -f "$src" ] || fail "No - source file not found"
what=compile
case "$src" in
	*.c)   lang=c  ;language="C"                            ;;
	*.hs)  lang=hs ;language="Haskell"                      ;;
	*.py)  lang=py ;language="Python"   ;what="parse"       ;;
	*.cs)  lang=cs ;language="C#"       ;run=mono; ext=.exe ;;
	*)     fail "No: unknown/unsupported file format or language" ;;
esac

main="main.$lang"
aslib=
[ -f "$main" ] && aslib=-as-lib
exe=exe$suffix$aslib$ext
[ -e $exe ] ||
"$lib/compile$aslib/$lang" "$src" $exe "$main" ||
fail "No - $what error ($language)"


in=in
[ -f "$in" ] || in=/dev/null

[ -n "$DEFAULT_TIME_LIMIT" ] || DEFAULT_TIME_LIMIT=1
nice timeout --preserve-status -v -k1s `cator $DEFAULT_TIME_LIMIT time-limit`s \
	$bin/udge-sandbox \
	$run ./$exe <"$in" >stdout 2>stderr
exitcode=$?

killall -q -9 ./$exe # kills remaining child processes if any

grep -q "^timeout: sending signal TERM" stderr && fail "No - time limit exceeded"

check-exit-code() {
	[ "$1" = 0 ]
}
checkexitcode=check-exit-code
[ -x ./check-exit-code ] && checkexitcode=./check-exit-code
$checkexitcode $exitcode || fail "No - runtime error (non-zero exit code)"

check-out() {
	# TODO: add flag that shows diff?
	diff -q "$1" "$2" >/dev/null
}
check=check-out
[ -x ./check-out ] && check=./check-out
$check sol stdout || fail "No - wrong output"
