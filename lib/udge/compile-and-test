#!/bin/bash
#
# compile-and-test: compiles and tests a program
#
#
# Copyright (C) 2015-2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# This is intended to be called only from bin/udge-judge
prefix="$(dirname "$(dirname "$(dirname "$0")")")"
. "$prefix/lib/udge/core"
fail() {
	echo "$@"
	exit 1
}
src="$1"
[ -f "$src" ] || fail "No - source file not found"
# TODO: actually don't use $dir at all, just copy everything needed into the
#       folder on judge
[ -n "$dir" ] || fail "dir variable not set -- TODO: FIXME: move this into judge"
[ -d "$dir" ] || fail "No - unknown problem code"
what=compile
case "$src" in
	*.c)   lang=c  ;language="C"                      ;;
	*.hs)  lang=hs ;language="Haskell"                ;;
	*.py)  lang=py ;language="Python"   ;what="parse" ;;
	*)     fail "No: unknown/unsupported file format or language" ;;
esac

main="$dir/main.$lang"
aslib=
[ -f "$main" ] && aslib=-as-lib
exe=exe$aslib
[ -x $exe ] ||
"$lib/compile$aslib/$lang" "$src" $exe "$main" ||
fail "No - $what error ($language)"


in="$dir/in"
[ -f "$in" ] || in=/dev/null

timeout --preserve-status -v -k1s `cator1 "$dir/time-limit"`s ./$exe < "$in" > stdout 2> stderr
exitcode=$?

grep -q "^timeout: sending signal TERM" stderr && fail "No - time limit exceeded"

check-exit-code() {
	[ "$1" = 0 ]
}
checkexitcode=check-exit-code
[ -x "$dir/check-exit-code" ] && checkexitcode="$dir/check-exit-code"
$checkexitcode $exitcode || fail "No - runtime error (non-zero exit code)"

check-out() {
	diff -q "$1" "$2" >/dev/null
}
check=check-out
[ -x "$dir/check-out" ] && check="$dir/check-out"
$check "$dir/sol" stdout || fail "No - wrong output"
