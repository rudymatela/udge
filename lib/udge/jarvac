#!/bin/bash
#
# jarvac: compiles java sources into a single jar file
#
# This file is part of Udge.
#
#
# Copyright (C) 2020-2023  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# usage: ./lib/udge/jarvac [jar] [java-files]
#
# Example:
#   $ ./lib/udge/jarvac exe.jar HelloWorld.java OtherClass.java
#   $ java -jar exe.jar
#   Hello, World!
#
# This is a wrapper to javac and jar.
# The first file contains the Main-Class.
# The remaining files do not need to have their class names.

set -e

dn=$(dirname $0)

javac="javac -d ."

shouldbe() {
	$javac "$1" 2>&1 |
	grep "should be declared in a file named" |
	head -1 |
	sed -e "s/.*should be declared in a file named //;s/.java$//"
}

classname() {
	basename="$(basename $1 .java)"
	classname="$(shouldbe $1)"
	[ -n "$classname" ] || classname=$basename
	echo $classname
}

javac-() {
	files=
	classes=
	classfiles=
	for file in "$@"
	do
		cn=$(classname $file)
		out=$cn.java
		echo cp $file $out
		cp $file $out || true
		files="$files $out"
		classes="$classes $cn"
		classfiles="$classfiles $cn.class"
	done
	echo $javac $files
	$javac $files
	rm $files
}

jarvac-() {
	jar="$1"
	shift
	javac- "$@"
	for class in $classes
	do
		echo "echo \"Main-Class: $class\" > MANIFEST.MF"
		echo "Main-Class: $class" > MANIFEST.MF
		break
	done
	echo jar cfm $jar MANIFEST.MF $classfiles
	jar cfm $jar MANIFEST.MF $classfiles &&
	rm MANIFEST.MF $classfiles
}

jarvac- "$@"
