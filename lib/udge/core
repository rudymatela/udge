#!/bin/bash
#
# lib/udge/core: core Udge utilities, supposed to be sourced in other scripts
#
# This file is part of Udge.
#
#
# Copyright (C) 2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. /etc/udgerc

# a sanity check for user and problem names
SANE='^[a-z_][a-z0-9_-]*$'

# a sanity check for emails (needs -E)
# not a full RFC compliant verification, but does the job.
SANE_EMAIL='^[a-z0-9][a-z0-9._%+-]*@[a-z0-9.-]+\.[a-z0-9.-]+$'

errxit() {
	# We use >&2 here instead of /dev/stderr.
	#
	# For some reason I was getting the following error when running scripts
	# from cron:
	#
	#     CROND: (user) CMDOUT (/usr/local/lib/udge/core: line 18: /dev/stderr: Permission denied)
	echo "`basename "$0"`, error: $@" >&2
	exit 1
}

termecho() {
	if [ -t 0 ] && [ -t 1 ]
	then
		echo "$@"
	fi
}

print() {
	printf "%s" "$1"
}

println() {
	printf "%s\n" "$1"
}

prompt() {
	case $1 in
	-s) flag=-s; shift;;
	*) flag=;;
	esac
	var="$1"
	msg="$2"
	[ -n "$msg" ] || msg="$var: "
	termecho -n "$msg"
	read $flag "$var"
	[ -n "$flag" ] && termecho || true
}

cator() {
	[ -f "$2" ] && cat $2 || echo "$1"
}

cator1() {
	cator 1 "$1"
}

maybe-cat() {
	[ -f "$1" ] && cat "$1"
	true
}

ls-users() {
	[ -d $USERS ] || errxit "could not find USERS=$USERS"
	find $USERS/ -mindepth 1 -maxdepth 1 -type d | sed -e "s,.*/,," | sort
}

ls-problems() {
	[ -d $PROBLEMS ] || errxit "could not find PROBLEMS=$PROBLEMS"
	find $PROBLEMS/ -mindepth 1 -maxdepth 1 -type d | sed -e "s,.*/,," | sort
}

ls-languages() {
	[ -d $lib/compile ] || errxit "could not find $lib/compile"
	for compiler in `find $lib/compile/ -mindepth 1 -maxdepth 1 | sort`
	do
		language=`echo $compiler | sed -e "s,.*/,,"`
		name=`head -3 $compiler | tail -1 | grep "^# " | sed -e "s/# //"`
		[ -n "$name" ] || name=$language
		printf "%-3s %s\n" $language $name
	done
}

# n-points <problem>
n-points() {
	outof=0
	for dir in $PROBLEMS/$1/*/; do
		pts=`cator1 $dir/pts`
		((outof+=$pts))
	done
	echo $outof
}

# checks if the given argument is a sane user/problem name
# usage: sane blah123
sane() {
	echo "$1" | grep -q "$SANE"
}

# checks if the given argument is a sane email
# usage: sane user@example.com
sane-email() {
	echo "$1" | grep -qE "$SANE_EMAIL"
}

finish-() {
	echo "$@"
	exit 0
}

finish() {
	finish- "`basename $0`: $@"
}

[ -d "$prefix" ] || errxit "prefix directory ($prefix) does not exist, broken Udge installation?"
bin=$prefix/bin
lib=$prefix/lib/udge
