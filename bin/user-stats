#!/bin/bash
#
# usage: ./bin/user-stats <user>
. /etc/udge/conf
errxit() {
	echo "$0, error: $@" >/dev/stderr
	echo "usage:" >/dev/stderr
	echo "  $0 <user> [all/overall/problem]" >/dev/stderr
	exit 1
}
user="$1"
[ -n "$user" ] || errxit "missing <user> argument"
[ -d "$USERS_DIR/$user" ] || errxit "user not found"
results="$RESULTS_DIR/$user"
#[ -d "$results" ] || errxit "user results dir not found (not generated yet?)"


dirname="`dirname $0`"


cator-() {
	[ -f "$1" ] && cat "$1"	|| echo ' -'
}


problems-tried() {
	ls -1 "$results" 2>/dev/null | wc -l
}


problems-solved() {
	cat $results/*/best 2>/dev/null | bc | grep "^1$" | wc -l
}


problems-scored() {
	cat $results/*/best 2>/dev/null | grep -v "^0/" | wc -l
}


overall-stats() {
	echo "`problems-solved` problems solved"
	echo "`problems-scored` problems scored"
	echo "`problems-tried` problems tried"
}


problem-stats() {
	for problem in `$dirname/ls-problems`
	do
		score=`cator- "$results/$problem/best"`
		# below, `head -n -1` removes "best" as it is not a problem
		tries=`ls -1 $results/$problem 2>/dev/null | head -n -1 | wc -l`
		printf "%-11s  %-3s  %s\n" "$problem" "$score" "$tries"
	done
}


all-stats() {
	overall-stats
	problem-stats
}


case "$2" in
	overall) overall-stats ;;
	problem) problem-stats ;;
	all|"")  all-stats ;;
	*)       errxit "Unknown stat type" ;;
esac
