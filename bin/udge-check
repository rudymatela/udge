#!/bin/bash
#
# udge-check: creates a backup Udge's "var" on the current directory
#
# Usage: udge-check
#
#
# Copyright (C) 2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# TODO: treat errors nicely

prefix="$(dirname "$(dirname "$0")")"
. "$prefix/lib/udge/core"

set -e

[ -d "$SLOTS" ] || errxit "the slots dir does not exist ($SLOTS)"
[ -d "$RUN" ]   || errxit "the run dir does not exist ($RUN)"

# TODO: use basename to find the id of the slot throughout the rest of the code
#       like here

slot=
for s in $SLOTS/*
do
	[ -d $s ] || errxit "there are no slots in $SLOTS"
	s="`basename $s`"
	[ -d $SLOTS/$s ] || errxit "slot $s folder $SLOTS/$s does not exist"
	[ -d $RUN/$s   ] || errxit "run $s folder $RUN/$s does not exist"
	if mv $RUN/$s/lock/run $RUN/$s/lock/check 2>/dev/null  # relies on mv's atomicity
	then
		slot=$s
		break
	fi
done
[ -n "$slot" ] || finish "nothing to do"

# TODO: somewhere here check that no process are running for a given slot

submission="`find $SLOTS/$slot -type f`"
[ -n "$submission" ] || errxit "no submission"
[ -f "$submission" ] || errxit "submission file not found: $submission"

echo checking $submission

user="`     echo $submission | sed -e 's,.*/\(.*\)/\(.*\)/\(.*\)\.\(.*\),\1,'`"
timestamp="`echo $submission | sed -e 's,.*/\(.*\)/\(.*\)/\(.*\)\.\(.*\),\2,'`"
problem="`  echo $submission | sed -e 's,.*/\(.*\)/\(.*\)/\(.*\)\.\(.*\),\3,'`"
language="` echo $submission | sed -e 's,.*/\(.*\)/\(.*\)/\(.*\)\.\(.*\),\4,'`"

[ -n "$user" ]      || errxit "could not parse user"
[ -n "$timestamp" ] || errxit "could not parse timestamp"
[ -n "$problem" ]   || errxit "could not parse problem"
[ -n "$language" ]  || errxit "could not parse language"

$lib/check $PROBLEMS/$problem $RUN/$s/lock/check | tee $SLOTS/$s/lock/$user/$timestamp/result
mkdir -p $RESULTS/$user/$problem
mv $SLOTS/$s/lock/$user/$timestamp $RESULTS/$user/$problem
rm -r $SLOTS/$s/lock
rm -r $RUN/$s/lock
echo created $RESULTS/$user/$problem/$timestamp/$problem.$language
echo created $RESULTS/$user/$problem/$timestamp/result

bestmp="`mktemp /tmp/udge-best-XXXXXXXXXX`"
for file in $RESULTS/$user/$problem/*/result
do
	tail -1 "$file"
done | sort -n | tail -1 >$bestmp
mv $bestmp $RESULTS/$user/$problem/best
echo updated $RESULTS/$user/$problem/best

echo
echo running again...
exec $bin/udge-check
