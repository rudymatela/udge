#!/bin/bash
#
# compile-and-test: compiles and tests a program
#
#
# Copyright (C) 2015-2020  Rudy Matela
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# NOTE: if I eventually split this into two, I should probably keep this as an
# entry point, i.e.: this script calls both the compilation and test scripts
dirname="`dirname $0`"
. "$dirname/utils/core"
errxit() {
	echo "$@"
	exit 1
}
cator1() {
	[ -f "$1" ] &&
		cat $1 ||
		echo 1 # default score is 1
}
src="$1"
[ -f "$src" ] || errxit "No - source file not found"
dirname="`dirname $0`"
[ -n "$dir" ] || dir="$dirname"
[ -d "$dir" ] || errxit "No - unknown problem code"
what=compile
case "$src" in
	*.c)   lang=c  ;language="C"                      ;;
	*.hs)  lang=hs ;language="Haskell"                ;;
	*.py)  lang=py ;language="Python"   ;what="parse" ;;
	*)     errxit "No: unknown/unsupported file format or language" ;;
esac

main="$dir/main.$lang"
lib=
[ -f "$main" ] && lib=lib
[ -x exe-$lib ] ||
"$dirname/compile/$lib/$lang" "$src" exe-$lib "$main" ||
errxit "No - $what error ($language)"


tmpdir=`mktemp -d /tmp/compile-and-test.XXXXXXXXXX`
out=$tmpdir/stdout
err=$tmpdir/stderr
rmerrxit() {
	rm -r $tmpdir
	errxit "$@"
}

in="$dir/in"
[ -f "$in" ] || in=/dev/null

timeout --preserve-status -v -k1s `cator1 "$dir/time-limit"`s ./exe-$lib < "$in" > "$out" 2> "$err"
exitcode=$?

grep -q "^timeout: sending signal TERM" "$err" && rmerrxit "No - time limit exceeded"

check-exit-code() {
	[ "$1" = 0 ]
}
checkexitcode=check-exit-code
[ -x "$dir/check-exit-code" ] && checkexitcode="$dir/check-exit-code"
$checkexitcode $exitcode || rmerrxit "No - runtime error (non-zero exit code)"

check-out() {
	diff -q "$1" "$2" >/dev/null
}
check=check-out
[ -x "$dir/check-out" ] && check="$dir/check-out"
$check "$dir/sol" "$out" || rmerrxit "No - wrong output"

rm -r $tmpdir
